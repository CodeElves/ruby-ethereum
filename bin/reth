#!/usr/bin/env ruby

$:.unshift File.expand_path('../../lib', __FILE__)

require 'ethereum/app/full'

class Reth
  include Ethereum::App

  Services = [DBService].freeze

  def initialize
    load_config

    Celluloid.boot
    @app = Ethereum::App::Full.new(@config)
  end

  def load_config
    Config.setup
    @config = Config.load

    puts_header 'CONFIGURATION'
    puts @config.to_hash
  end

  def register_services
    Services.each do |service|
      raise ArgumentError, 'service must be BaseService' unless service.instance_of?(Class) && service < DEVp2p::BaseService
      if !@app.config[:deactivated_services].include?(service.name) # TODO: + [AccountService.name]
        service.register_with_app @app
      end
    end
  end

  def start
    register_services

    puts_header "starting"
    @app.start

    #trap("INT")  { @app.stop }
    #trap("TERM") { @app.stop }
    #trap("QUIT") { @app.stop }

    @app.join
  end

  private

  def puts_header(text)
    puts "\n>>>>> #{text}"
  end
end

Reth.new.start

